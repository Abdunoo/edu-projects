name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Run linter
      working-directory: ./server
      run: npm run lint

    - name: Run unit tests
      working-directory: ./server
      run: npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        JWT_SECRET: test-secret
        JWT_REFRESH_SECRET: test-refresh-secret

    - name: Run e2e tests
      working-directory: ./server
      run: npm run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        JWT_SECRET: test-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        NODE_ENV: test

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      working-directory: ./web
      run: npm ci

    - name: Run linter
      working-directory: ./web
      run: npm run lint

    - name: Build
      working-directory: ./web
      run: npm run build
      env:
        NUXT_PUBLIC_API_BASE: http://localhost:3001
        NUXT_API_BASE: http://localhost:3001/api

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Build Backend
      working-directory: ./server
      run: |
        npm ci
        npm run build

    - name: Build Frontend
      working-directory: ./web
      run: |
        npm ci
        npm run build
